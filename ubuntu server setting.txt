일단 ubuntu 설치
윈도우즈나 맥에 virtualbox 를 이용해서 설치해봅시다
ubuntu.com 에서 ubuntu-18.04.4-live-server-amd64.iso 를 다운받습니다
이 파일의 SHA256 값은 73B8D860E421000A6E35FDEFBB0EC859B9385B0974CF8089F5D70A87DE72F6B9
파워쉘에서 Get-FileHash ubuntu-18.04.4-live-server-amd64.iso 로 확인 가능
virtualbox 에서 설치시 설정 - 네트워크에 어댑터에 브릿지로 선택합시다
설치 과정중에는 OpenSSH 를 체크해줍시다.
설치과정중에 지어주는 계정이름과 패스워드를 잘 기억해둡니다

설치가 완료되면 로그인 후 ifconfig 라고 입력해봅니다
이때 192.168~ 로 시작하는 IP 주소가 해당 가상머신주소입니다
이 주소를 파워쉘에서 ssh 계정이름@가상머신주소 입력후 패스워드를 입력하고 접속합니다

ssh -i "keypair.pem" ubuntu@ec2-3-34-52-128.ap-northeast-2.compute.amazonaws.com

# 우분투 repository(저장소) 변경하기
sudo su
sudo sed -i 's/kr.archive.ubuntu.com/ftp.daumkakao.com/g' /etc/apt/sources.list
exit

# 우분투 설치 후에
sudo apt-get update && sudo apt-get -y upgrade;

# apmsetup7
# nginx, nodejs, mysql

# 몽고디비
# https://yuddomack.tistory.com/entry/%EC%B2%98%EC%9D%8C%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-EC2-mongodb-%EA%B3%84%EC%A0%95-%EC%83%9D%EC%84%B1-%EC%99%B8%EB%B6%80-%EC%A0%91%EC%86%8D?category=777812
# https://yuddomack.tistory.com/entry/%EC%B2%98%EC%9D%8C%EB%B6%80%ED%84%B0-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-EC2-ubuntu-mongodb-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org=4.0.5 mongodb-org-server=4.0.5 mongodb-org-shell=4.0.5 mongodb-org-mongos=4.0.5 mongodb-org-tools=4.0.5
echo "mongodb-org hold" | sudo dpkg --set-selections
echo "mongodb-org-server hold" | sudo dpkg --set-selections
echo "mongodb-org-shell hold" | sudo dpkg --set-selections
echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
echo "mongodb-org-tools hold" | sudo dpkg --set-selections

ls /lib/systemd/system/mongod.service # 해서 파일이 존재하는지 확인
sudo service mongod start # 데몬 실행해서 잘 실행되면 OK
sudo systemctl enable mongod # 서비스에 등록. 접속은 mongo

# 노드설치
curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
sudo apt-get install -y nodejs

# 디비설치
sudo apt-get install -y mysql-server

# 디비 설정
sudo mysql -u root;
USE mysql;
SELECT User, Host, plugin FROM mysql.user;
update user set plugin='mysql_native_password' where user='root';
flush privileges;
select user, host, plugin from user;
exit;

mysql -u root -p # 패스워드없으니 그냥엔터
UPDATE mysql.user SET authentication_string=password('1234') WHERE user='root'; 
FLUSH PRIVILEGES;
exit;

# 반영을 위해 디비 재시작
sudo service mysql restart;

# 웹서버설치
sudo apt-get install -y nginx

# 웹서버 설정
sudo vim /etc/nginx/sites-available/node-server # 에디터로 설정파일 편집
입력의 시작은 i, 그런후 붙여넣고 :wq 해서 저장하고 빠져나가기

server {
        listen 80; # 외부에서 들어올 포트
        server_name 132.145.80.208; # 외부에서 들어올 주소
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;       # 포워딩 아이피
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;                                  # 프로토콜
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://127.0.0.1:3000; # 이동시켜줄 내부 주소
            # client_max_body_size 16M;
        }
}

# 방금 만든 설정파일의 링크를 만들기
sudo ln -s /etc/nginx/sites-available/node-server /etc/nginx/sites-enabled/

# 웹서버 설정 하고 반영을 위해 재시작
sudo service nginx restart

# 웹서버의 파일구조 참고 설명
├── conf.d # (디렉토리) nginx.conf에서 불러들일 수 있는 파일을 저장
├── fastcgi.conf # (파일) FastCGI 환경설정 파일
├── fastcgi_params
├── koi-utf
├── koi-win
├── mime.types
├── nginx.conf # 접속자 수, 동작 프로세스 수 등 퍼포먼스에 관한 설정들
├── proxy_params
├── scgi_params
├── sites-available # 비활성화된 사이트들의 설정 파일들이 위치한다.
│   └── default
├── sites-enabled # 활성화된 사이트들의 설정 파일들이 위치한다. 존재하지 않은 경우에는 디렉토리를 직접 만들 수도 있다.
│   └── default -> /etc/nginx/sites-available/default
├── snippets
│   ├── fastcgi-php.conf
│   └── snakeoil.conf
├── uwsgi_params
└── win-utf

# pm2와 nodemon 설치 (node code 를 실행해주는 애들)
sudo npm install -g pm2@latest nodemon

#
sudo apt install node-gyp

# 추가적으로 필요하다면 vscode 에 ftp-simple 에 환경설정
# AWS에서 PEM 키파일을 받은 경우에는 아래 설정에서 password 부분을 privateKey 로 이름을 바꿔서
# pem 파일의 경로를 기록
[
   {
      "name": "192.168.219.103",
      "host": "192.168.219.103",
      "port": 22,
      "type": "sftp",
      "username": "kst",
      "password": "패스워드",
      "path": "/home/kst/",
      "autosave": true,
      "confirm": false
   }
]

# 만약 아파치웹서버도 함께 쓰고싶다면 nginx 의 포트를 다른거로 바꿔라.. 예를들어 81
/etc/nginx/sites-available 안에 있는 두 파일의 포트를 변경
/etc/nginx/sites-available/default 의 root /var/www/www; 를 root /var/www/nginx; 로 변경후 
mkdir /var/www/nginx; chmod -R 707 /var/www/


끝